{"ast":null,"code":"var plugins = [{\n  plugin: require('/home/michael/code/auderer/auderer.dev/node_modules/gatsby-plugin-react-native-web/gatsby-ssr'),\n  options: {\n    \"plugins\": []\n  }\n}];\n\nvar apis = require(\"./api-ssr-docs\");\n\nmodule.exports = function (api, args, defaultReturn, argTransform) {\n  if (!apis[api]) {\n    console.log(\"This API doesn't exist\", api);\n  }\n\n  var results = plugins.map(function (plugin) {\n    if (!plugin.plugin[api]) {\n      return undefined;\n    }\n\n    var result = plugin.plugin[api](args, plugin.options);\n\n    if (result && argTransform) {\n      args = argTransform({\n        args: args,\n        result: result\n      });\n    }\n\n    return result;\n  });\n  results = results.filter(function (result) {\n    return typeof result !== \"undefined\";\n  });\n\n  if (results.length > 0) {\n    return results;\n  } else {\n    return [defaultReturn];\n  }\n};","map":{"version":3,"sources":["/home/michael/code/auderer/auderer.dev/.cache/api-runner-ssr.js"],"names":["plugins","plugin","require","options","apis","module","exports","api","args","defaultReturn","argTransform","console","log","results","map","undefined","result","filter","length"],"mappings":"AAAA,IAAIA,OAAO,GAAG,CAAC;AACTC,EAAAA,MAAM,EAAEC,OAAO,CAAC,+FAAD,CADN;AAETC,EAAAA,OAAO,EAAE;AAAC,eAAU;AAAX;AAFA,CAAD,CAAd;;AAgBA,IAAMC,IAAI,GAAGF,OAAO,kBAApB;;AAGAG,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,IAAN,EAAYC,aAAZ,EAA2BC,YAA3B,EAA4C;AAC3D,MAAI,CAACN,IAAI,CAACG,GAAD,CAAT,EAAgB;AACdI,IAAAA,OAAO,CAACC,GAAR,2BAAsCL,GAAtC;AACD;;AAID,MAAIM,OAAO,GAAGb,OAAO,CAACc,GAAR,CAAY,UAAAb,MAAM,EAAI;AAClC,QAAI,CAACA,MAAM,CAACA,MAAP,CAAcM,GAAd,CAAL,EAAyB;AACvB,aAAOQ,SAAP;AACD;;AACD,QAAMC,MAAM,GAAGf,MAAM,CAACA,MAAP,CAAcM,GAAd,EAAmBC,IAAnB,EAAyBP,MAAM,CAACE,OAAhC,CAAf;;AACA,QAAIa,MAAM,IAAIN,YAAd,EAA4B;AAC1BF,MAAAA,IAAI,GAAGE,YAAY,CAAC;AAAEF,QAAAA,IAAI,EAAJA,IAAF;AAAQQ,QAAAA,MAAM,EAANA;AAAR,OAAD,CAAnB;AACD;;AACD,WAAOA,MAAP;AACD,GATa,CAAd;AAYAH,EAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAe,UAAAD,MAAM;AAAA,WAAI,OAAOA,MAAP,gBAAJ;AAAA,GAArB,CAAV;;AAEA,MAAIH,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACtB,WAAOL,OAAP;AACD,GAFD,MAEO;AACL,WAAO,CAACJ,aAAD,CAAP;AACD;AACF,CA1BD","sourcesContent":["var plugins = [{\n      plugin: require('/home/michael/code/auderer/auderer.dev/node_modules/gatsby-plugin-react-native-web/gatsby-ssr'),\n      options: {\"plugins\":[]},\n    }]\n// During bootstrap, we write requires at top of this file which looks like:\n// var plugins = [\n//   {\n//     plugin: require(\"/path/to/plugin1/gatsby-ssr.js\"),\n//     options: { ... },\n//   },\n//   {\n//     plugin: require(\"/path/to/plugin2/gatsby-ssr.js\"),\n//     options: { ... },\n//   },\n// ]\n\nconst apis = require(`./api-ssr-docs`)\n\n// Run the specified API in any plugins that have implemented it\nmodule.exports = (api, args, defaultReturn, argTransform) => {\n  if (!apis[api]) {\n    console.log(`This API doesn't exist`, api)\n  }\n\n  // Run each plugin in series.\n  // eslint-disable-next-line no-undef\n  let results = plugins.map(plugin => {\n    if (!plugin.plugin[api]) {\n      return undefined\n    }\n    const result = plugin.plugin[api](args, plugin.options)\n    if (result && argTransform) {\n      args = argTransform({ args, result })\n    }\n    return result\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else {\n    return [defaultReturn]\n  }\n}\n"]},"metadata":{},"sourceType":"script"}